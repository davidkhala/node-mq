name: kafka
on:
  push:
defaults:
  run:
    working-directory: kafka
jobs:
  oracle:
    environment: OCIStreaming
    env:
      authToken: ${{ secrets.AUTH_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: latest
      - run: npm i
      - run: npm run test:oracle
  local:
    runs-on: ubuntu-latest
    steps:
      - uses: davidkhala/setup-dockerode@main
      - run: |
          curl -sSL https://raw.githubusercontent.com/davidkhala/mq/main/kafka/bitnami/compose.yaml > compose.yaml
          docker compose up -d
      - run: sleep 7
      - run: npm i
      - run: npm run test:local
  pulsar:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pulsar
    steps:
      - uses: davidkhala/setup-dockerode@main
      - run: |
          curl -sSL https://raw.githubusercontent.com/davidkhala/mq/main/pulsar/compose.yaml > compose.yaml
          docker compose up -d
      - run: sleep 7
      - run: npm i
      - run: npm test

  confluent:
    runs-on: ubuntu-latest
    environment: confluent
    defaults:
      run:
        working-directory: confluent
    steps:
      - uses: actions/checkout@main
      - run: npm i
      - run: npm test
        env:
          API_SECRET: ${{secrets.API_SECRET}}
          API_KEY: ${{vars.API_KEY}}
          ENDPOINT: ${{vars.ENDPOINT}}